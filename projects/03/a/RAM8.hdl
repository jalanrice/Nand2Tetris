// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load, sel=address, a=RegA, b=RegB, c=RegC, d=RegD, e=RegE, f=RegF, g=RegG, h=RegH);
	Register(in=in, load=RegA, out=muxA);
	Register(in=in, load=RegB, out=muxB);
	Register(in=in, load=RegC, out=muxC);
	Register(in=in, load=RegD, out=muxD);
	Register(in=in, load=RegE, out=muxE);
	Register(in=in, load=RegF, out=muxF);
	Register(in=in, load=RegG, out=muxG);
	Register(in=in, load=RegH, out=muxH);
	Mux8Way16(a=muxA, b=muxB, c=muxC, d=muxD, e=muxE, f=muxF, g=muxG, h=muxH, sel=address, out=out);
	
}